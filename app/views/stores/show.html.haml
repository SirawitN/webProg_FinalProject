- flash.each do |type, msg|
  %div.alert.alert-primary.alert-dismissible.fade.show
    %p "#{msg}"
    %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "alert", :type => "button"}

.container
  .row
    .col-4
      %p
        %b Username:
        = @store.username
      %p
        %b Email:
        = @store.email
      %p
        %b Address:
        = @store.address
      %p
        %b Subdistrict:
        = @store.subDistrict
      
    .col-4
      %p
        %b District:
        = @store.district
      %p
        %b Province:
        = @store.province
      %p
        %b Zipcode:
        = @store.zipcode
      %p
        %b Rating :
        = @store.rating
    .col-4
      .row.mb-3
        = button_to "Review", new_review_path(@review), class: "btn btn-primary review-btn", remote: true, method: :get, "data-bs-target": '.reviewModal', 'data-bs-toggle': 'modal', 'data-user-id': session[:user_id], 'data-store-id': @store.id

      .row
        - if session[:store_id]
          = button_to 'Add new products', new_product_path, method: :get, class: "btn btn-warning"

          = button_to 'Edit', edit_store_path(@store), class: "btn btn-primary", method: :get

        - if !!session[:store_id]
          = button_to "Logout", logout_url, method: :get, class: "btn btn-danger"
        - elsif !!session[:user_id] && @current_user.stores.include?(@store)
          = button_to "Unfollow", unfollow_path(@store), method: :delete, class: "btn btn-info"
        - else
          = button_to "Follow", follow_path(@store), method: :post, class: "btn btn-info"

  - if session[:user_id]
    .row
      .col-6
        = "ITEM LIST"
        - @store.show_products.each do |tag, items|
          - if items.size == 0
            - next
          .row.mb-2{id: "#{tag}Row"}
            %h5= tag
            - items.each do |p|
              = render 'productCard_store', product: p, tag: tag

      .col-6
        %label= "SHOPPING CART"
        %label= @cart.total
        - if @cart.cart_items.any?
          = button_to "Check out", orders_path(user_id: session[:user_id], store_id: session[:bought_store_id]), class: "btn btn-warning"
        -@cart.cart_items.each do |cart_item|
          - product = Product.find(cart_item.product_id)
          =render 'productCard_cart', product: product, cart_item: cart_item

  - elsif session[:store_id]
    .row
      .col-12
        = "ITEM LIST"
        - @store.show_products.each do |tag, items|
          - if items.size == 0
            - next
          .row.mb-2{id: "#{tag}Row"}
            %h5= tag
            - items.each do |p|
              = render 'productCard_store', product: p, tag: tag
= render 'productModal_customer'
= render 'reviewModal'